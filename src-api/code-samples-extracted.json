{
  "root.paths./context.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/context',\n  qs: {\n    'owner-id': 'SOME_STRING_VALUE',\n    'owner-slug': 'SOME_STRING_VALUE',\n    'owner-type': 'SOME_STRING_VALUE',\n    'page-token': 'SOME_STRING_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/context?owner-id=SOME_STRING_VALUE&owner-slug=SOME_STRING_VALUE&owner-type=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context?owner-id=SOME_STRING_VALUE&owner-slug=SOME_STRING_VALUE&owner-type=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/context?owner-id=SOME_STRING_VALUE&owner-slug=SOME_STRING_VALUE&owner-type=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/context',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'string',\n    owner: {id: '497f6eca-6276-4993-bfeb-53cbbbba6f08', type: 'organization'}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"owner\\\":{\\\"id\\\":\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\",\\\"type\\\":\\\"organization\\\"}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/context\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"owner\\\":{\\\"id\\\":\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\",\\\"type\\\":\\\"organization\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/context \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"owner\":{\"id\":\"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\"type\":\"organization\"}}'"
    }
  ],
  "root.paths./context/{context-id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/context/%7Bcontext-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/context/%7Bcontext-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/%7Bcontext-id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/context/%7Bcontext-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context/{context-id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/context/%7Bcontext-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/context/%7Bcontext-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/%7Bcontext-id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/context/%7Bcontext-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context/{context-id}/environment-variable.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable',\n  qs: {'page-token': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/context/%7Bcontext-id%7D/environment-variable?page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable?page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable?page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context/{context-id}/environment-variable/{env-var-name}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context/{context-id}/environment-variable/{env-var-name}.put": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {value: 'some-secret-value'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"value\\\":\\\"some-secret-value\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PUT\", \"/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER\"\n\n\tpayload := strings.NewReader(\"{\\\"value\\\":\\\"some-secret-value\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PUT \\\n  --url https://circleci.com/api/v2/context/%7Bcontext-id%7D/environment-variable/POSTGRES_USER \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"value\":\"some-secret-value\"}'"
    }
  ],
  "root.paths./context/{context_id}/restrictions.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./context/{context_id}/restrictions.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    project_id: '405d8375-3514-403b-8c43-83ae74cfe0e9',\n    restriction_type: 'project',\n    restriction_value: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"project_id\\\":\\\"405d8375-3514-403b-8c43-83ae74cfe0e9\\\",\\\"restriction_type\\\":\\\"project\\\",\\\"restriction_value\\\":\\\"string\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions\"\n\n\tpayload := strings.NewReader(\"{\\\"project_id\\\":\\\"405d8375-3514-403b-8c43-83ae74cfe0e9\\\",\\\"restriction_type\\\":\\\"project\\\",\\\"restriction_value\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"project_id\":\"405d8375-3514-403b-8c43-83ae74cfe0e9\",\"restriction_type\":\"project\",\"restriction_value\":\"string\"}'"
    }
  ],
  "root.paths./context/{context_id}/restrictions/{restriction_id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions/1c23d2cb-07b1-4a28-8af3-e369732050ed',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions/1c23d2cb-07b1-4a28-8af3-e369732050ed\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions/1c23d2cb-07b1-4a28-8af3-e369732050ed\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/context/be8bb2e3-c3d6-4098-89f4-572ff976ba9a/restrictions/1c23d2cb-07b1-4a28-8af3-e369732050ed \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/pages/{project-slug}/summary.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/pages/gh/CircleCI-Public/api-preview-docs/summary',\n  qs: {\n    'reporting-window': 'SOME_STRING_VALUE',\n    branches: 'SOME_OBJECT_VALUE',\n    'workflow-names': 'SOME_OBJECT_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/pages/gh/CircleCI-Public/api-preview-docs/summary?reporting-window=SOME_STRING_VALUE&branches=SOME_OBJECT_VALUE&workflow-names=SOME_OBJECT_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/pages/gh/CircleCI-Public/api-preview-docs/summary?reporting-window=SOME_STRING_VALUE&branches=SOME_OBJECT_VALUE&workflow-names=SOME_OBJECT_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/pages/gh/CircleCI-Public/api-preview-docs/summary?reporting-window=SOME_STRING_VALUE&branches=SOME_OBJECT_VALUE&workflow-names=SOME_OBJECT_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/time-series/{project-slug}/workflows/{workflow-name}/jobs.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/time-series/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs',\n  qs: {\n    branch: 'SOME_STRING_VALUE',\n    granularity: 'SOME_STRING_VALUE',\n    'start-date': 'SOME_STRING_VALUE',\n    'end-date': 'SOME_STRING_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/time-series/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?branch=SOME_STRING_VALUE&granularity=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/time-series/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?branch=SOME_STRING_VALUE&granularity=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/time-series/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?branch=SOME_STRING_VALUE&granularity=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{org-slug}/summary.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/summary',\n  qs: {'reporting-window': 'SOME_STRING_VALUE', 'project-names': 'SOME_OBJECT_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/summary?reporting-window=SOME_STRING_VALUE&project-names=SOME_OBJECT_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/summary?reporting-window=SOME_STRING_VALUE&project-names=SOME_OBJECT_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/summary?reporting-window=SOME_STRING_VALUE&project-names=SOME_OBJECT_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/branches.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/branches',\n  qs: {'workflow-name': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/branches?workflow-name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/branches?workflow-name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/branches?workflow-name=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/flaky-tests.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/flaky-tests',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/flaky-tests\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/flaky-tests\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/flaky-tests \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/workflows.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows',\n  qs: {\n    'page-token': 'SOME_STRING_VALUE',\n    'all-branches': 'SOME_BOOLEAN_VALUE',\n    branch: 'SOME_STRING_VALUE',\n    'reporting-window': 'SOME_STRING_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/workflows/{workflow-name}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test',\n  qs: {\n    'all-branches': 'SOME_BOOLEAN_VALUE',\n    branch: 'SOME_STRING_VALUE',\n    'page-token': 'SOME_STRING_VALUE',\n    'start-date': 'SOME_STRING_VALUE',\n    'end-date': 'SOME_STRING_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&start-date=SOME_STRING_VALUE&end-date=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/workflows/{workflow-name}/jobs.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs',\n  qs: {\n    'page-token': 'SOME_STRING_VALUE',\n    'all-branches': 'SOME_BOOLEAN_VALUE',\n    branch: 'SOME_STRING_VALUE',\n    'reporting-window': 'SOME_STRING_VALUE',\n    'job-name': 'SOME_STRING_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE&job-name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE&job-name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/jobs?page-token=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE&reporting-window=SOME_STRING_VALUE&job-name=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/workflows/{workflow-name}/summary.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/summary',\n  qs: {'all-branches': 'SOME_BOOLEAN_VALUE', branch: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/summary?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/summary?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/summary?all-branches=SOME_BOOLEAN_VALUE&branch=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./insights/{project-slug}/workflows/{workflow-name}/test-metrics.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/test-metrics',\n  qs: {branch: 'SOME_STRING_VALUE', 'all-branches': 'SOME_BOOLEAN_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/test-metrics?branch=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/test-metrics?branch=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/insights/gh/CircleCI-Public/api-preview-docs/workflows/build-and-test/test-metrics?branch=SOME_STRING_VALUE&all-branches=SOME_BOOLEAN_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./jobs/{job-id}/cancel.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/jobs/%7Bjob-id%7D/cancel',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"POST\", \"/api/v2/jobs/%7Bjob-id%7D/cancel\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/jobs/%7Bjob-id%7D/cancel\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/jobs/%7Bjob-id%7D/cancel \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./me.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/me',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/me\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/me\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/me \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./me/collaborations.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/me/collaborations',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/me/collaborations\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/me/collaborations\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/me/collaborations \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./org/{orgID}/oidc-custom-claims.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims',\n  qs: {claims: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/org/%7BorgID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url 'https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./org/{orgID}/oidc-custom-claims.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/org/%7BorgID%7D/oidc-custom-claims\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./org/{orgID}/oidc-custom-claims.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {audience: ['string'], ttl: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"audience\\\":[\\\"string\\\"],\\\"ttl\\\":\\\"string\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/org/%7BorgID%7D/oidc-custom-claims\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims\"\n\n\tpayload := strings.NewReader(\"{\\\"audience\\\":[\\\"string\\\"],\\\"ttl\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/org/%7BorgID%7D/oidc-custom-claims \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"audience\":[\"string\"],\"ttl\":\"string\"}'"
    }
  ],
  "root.paths./org/{orgID}/project/{projectID}/oidc-custom-claims.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims',\n  qs: {claims: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url 'https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims?claims=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./org/{orgID}/project/{projectID}/oidc-custom-claims.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./org/{orgID}/project/{projectID}/oidc-custom-claims.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {audience: ['string'], ttl: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"audience\\\":[\\\"string\\\"],\\\"ttl\\\":\\\"string\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims\"\n\n\tpayload := strings.NewReader(\"{\\\"audience\\\":[\\\"string\\\"],\\\"ttl\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/org/%7BorgID%7D/project/%7BprojectID%7D/oidc-custom-claims \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"audience\":[\"string\"],\"ttl\":\"string\"}'"
    }
  ],
  "root.paths./organization.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/organization',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {name: 'string', vcs_type: 'github'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"vcs_type\\\":\\\"github\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/organization\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"vcs_type\\\":\\\"github\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/organization \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"vcs_type\":\"github\"}'"
    }
  ],
  "root.paths./organization/{org-slug-or-id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/organization/gh/CircleCI-Public',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/organization/gh/CircleCI-Public\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization/gh/CircleCI-Public\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/organization/gh/CircleCI-Public \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./organization/{org-slug-or-id}/project.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/organization/gh/CircleCI-Public/project',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {name: 'api-preview-docs'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"api-preview-docs\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/organization/gh/CircleCI-Public/project\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization/gh/CircleCI-Public/project\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"api-preview-docs\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/organization/gh/CircleCI-Public/project \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"api-preview-docs\"}'"
    }
  ],
  "root.paths./organization/{org-slug-or-id}/url-orb-allow-list.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./organization/{org-slug-or-id}/url-orb-allow-list.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'Allow URL orbs from raw.githubusercontent.com/CircleCI-Public',\n    prefix: 'https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/',\n    auth: 'github-app'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\\\",\\\"prefix\\\":\\\"https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/\\\",\\\"auth\\\":\\\"github-app\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\\\",\\\"prefix\\\":\\\"https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/\\\",\\\"auth\\\":\\\"github-app\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\",\"prefix\":\"https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/\",\"auth\":\"github-app\"}'"
    }
  ],
  "root.paths./organization/{org-slug-or-id}/url-orb-allow-list/{allow-list-entry-id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list/ba98990a-5a00-4cad-b55e-b44117b92e0c',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list/ba98990a-5a00-4cad-b55e-b44117b92e0c\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list/ba98990a-5a00-4cad-b55e-b44117b92e0c\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/organization/gh/CircleCI-Public/url-orb-allow-list/ba98990a-5a00-4cad-b55e-b44117b92e0c \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./organizations/{org_id}/usage_export_job.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    start: '2019-08-24T14:15:22Z',\n    end: '2019-08-24T14:15:22Z',\n    shared_org_ids: ['497f6eca-6276-4993-bfeb-53cbbbba6f08']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"start\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"end\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"shared_org_ids\\\":[\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\"]}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job\"\n\n\tpayload := strings.NewReader(\"{\\\"start\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"end\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"shared_org_ids\\\":[\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"start\":\"2019-08-24T14:15:22Z\",\"end\":\"2019-08-24T14:15:22Z\",\"shared_org_ids\":[\"497f6eca-6276-4993-bfeb-53cbbbba6f08\"]}'"
    }
  ],
  "root.paths./organizations/{org_id}/usage_export_job/{usage_export_job_id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job/e8235eed-f121-4ae3-9c72-2719d6572818',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job/e8235eed-f121-4ae3-9c72-2719d6572818\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job/e8235eed-f121-4ae3-9c72-2719d6572818\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/organizations/b9291e0d-a11e-41fb-8517-c545388b5953/usage_export_job/e8235eed-f121-4ae3-9c72-2719d6572818 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision',\n  qs: {\n    status: 'SOME_STRING_VALUE',\n    after: 'SOME_STRING_VALUE',\n    before: 'SOME_STRING_VALUE',\n    branch: 'SOME_STRING_VALUE',\n    project_id: 'SOME_STRING_VALUE',\n    build_number: 'SOME_STRING_VALUE',\n    offset: 'SOME_INTEGER_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision?status=SOME_STRING_VALUE&after=SOME_STRING_VALUE&before=SOME_STRING_VALUE&branch=SOME_STRING_VALUE&project_id=SOME_STRING_VALUE&build_number=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision?status=SOME_STRING_VALUE&after=SOME_STRING_VALUE&before=SOME_STRING_VALUE&branch=SOME_STRING_VALUE&project_id=SOME_STRING_VALUE&build_number=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision?status=SOME_STRING_VALUE&after=SOME_STRING_VALUE&before=SOME_STRING_VALUE&branch=SOME_STRING_VALUE&project_id=SOME_STRING_VALUE&build_number=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {input: 'string', metadata: {}},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"input\\\":\\\"string\\\",\\\"metadata\\\":{}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision\"\n\n\tpayload := strings.NewReader(\"{\\\"input\\\":\\\"string\\\",\\\"metadata\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"input\":\"string\",\"metadata\":{}}'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision/settings.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision/settings.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {enabled: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"enabled\\\":true}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":true}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/settings \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"enabled\":true}'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision/{decisionID}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/decision/{decisionID}/policy-bundle.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D/policy-bundle',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D/policy-bundle\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D/policy-bundle\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/decision/%7BdecisionID%7D/policy-bundle \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/policy-bundle.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/policy-bundle.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle',\n  qs: {dry: 'SOME_BOOLEAN_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {policies: {property1: 'string', property2: 'string'}},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"policies\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle?dry=SOME_BOOLEAN_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle?dry=SOME_BOOLEAN_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"policies\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle?dry=SOME_BOOLEAN_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"policies\":{\"property1\":\"string\",\"property2\":\"string\"}}'"
    }
  ],
  "root.paths./owner/{ownerID}/context/{context}/policy-bundle/{policyName}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle/%7BpolicyName%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle/%7BpolicyName%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle/%7BpolicyName%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/owner/%7BownerID%7D/context/%7Bcontext%7D/policy-bundle/%7BpolicyName%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./pipeline.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/pipeline',\n  qs: {\n    'org-slug': 'SOME_STRING_VALUE',\n    'page-token': 'SOME_STRING_VALUE',\n    mine: 'SOME_BOOLEAN_VALUE'\n  },\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/pipeline?org-slug=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&mine=SOME_BOOLEAN_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline?org-slug=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&mine=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/pipeline?org-slug=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE&mine=SOME_BOOLEAN_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./pipeline/continue.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/pipeline/continue',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    'continuation-key': 'string',\n    configuration: 'string',\n    parameters: {deploy_prod: true}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"continuation-key\\\":\\\"string\\\",\\\"configuration\\\":\\\"string\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/pipeline/continue\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline/continue\"\n\n\tpayload := strings.NewReader(\"{\\\"continuation-key\\\":\\\"string\\\",\\\"configuration\\\":\\\"string\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/pipeline/continue \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"continuation-key\":\"string\",\"configuration\":\"string\",\"parameters\":{\"deploy_prod\":true}}'"
    }
  ],
  "root.paths./pipeline/{pipeline-id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./pipeline/{pipeline-id}/config.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/config',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/config\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/config\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/config \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./pipeline/{pipeline-id}/values.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/values',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/values\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/values\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/values \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./pipeline/{pipeline-id}/workflow.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/workflow',\n  qs: {'page-token': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/workflow?page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/workflow?page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/pipeline/5034460f-c7c4-4c43-9457-de07e2029e7b/workflow?page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/checkout-key.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key',\n  qs: {digest: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key?digest=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key?digest=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key?digest=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/checkout-key.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {type: 'deploy-key'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"type\\\":\\\"deploy-key\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key\"\n\n\tpayload := strings.NewReader(\"{\\\"type\\\":\\\"deploy-key\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"type\":\"deploy-key\"}'"
    }
  ],
  "root.paths./project/{project-slug}/checkout-key/{fingerprint}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/checkout-key/{fingerprint}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/checkout-key/c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/envvar.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/envvar.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {name: 'foo', value: 'xxxx1234'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"foo\\\",\\\"value\\\":\\\"xxxx1234\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"foo\\\",\\\"value\\\":\\\"xxxx1234\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"foo\",\"value\":\"xxxx1234\"}'"
    }
  ],
  "root.paths./project/{project-slug}/envvar/{name}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/envvar/{name}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/envvar/foo \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/job/{job-number}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/job/{job-number}/cancel.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123/cancel',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123/cancel\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123/cancel\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/job/123/cancel \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/pipeline.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline',\n  qs: {branch: 'SOME_STRING_VALUE', 'page-token': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline?branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline?branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline?branch=SOME_STRING_VALUE&page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/pipeline.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    branch: 'feature/design-new-api',\n    tag: 'v3.1.4159',\n    parameters: {deploy_prod: true}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"branch\\\":\\\"feature/design-new-api\\\",\\\"tag\\\":\\\"v3.1.4159\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline\"\n\n\tpayload := strings.NewReader(\"{\\\"branch\\\":\\\"feature/design-new-api\\\",\\\"tag\\\":\\\"v3.1.4159\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"branch\":\"feature/design-new-api\",\"tag\":\"v3.1.4159\",\"parameters\":{\"deploy_prod\":true}}'"
    }
  ],
  "root.paths./project/{project-slug}/pipeline/mine.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/mine',\n  qs: {'page-token': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/mine?page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/mine?page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/mine?page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/pipeline/{pipeline-number}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/123',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/123\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/123\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/123 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/schedule.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule',\n  qs: {'page-token': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule?page-token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule?page-token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule?page-token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/schedule.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'string',\n    timetable: {\n      'per-hour': 0,\n      'hours-of-day': [0],\n      'days-of-week': ['TUE'],\n      'days-of-month': [0],\n      months: ['MAR']\n    },\n    'attribution-actor': 'current',\n    parameters: {deploy_prod: true, branch: 'feature/design-new-api'},\n    description: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"timetable\\\":{\\\"per-hour\\\":0,\\\"hours-of-day\\\":[0],\\\"days-of-week\\\":[\\\"TUE\\\"],\\\"days-of-month\\\":[0],\\\"months\\\":[\\\"MAR\\\"]},\\\"attribution-actor\\\":\\\"current\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true,\\\"branch\\\":\\\"feature/design-new-api\\\"},\\\"description\\\":\\\"string\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"timetable\\\":{\\\"per-hour\\\":0,\\\"hours-of-day\\\":[0],\\\"days-of-week\\\":[\\\"TUE\\\"],\\\"days-of-month\\\":[0],\\\"months\\\":[\\\"MAR\\\"]},\\\"attribution-actor\\\":\\\"current\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true,\\\"branch\\\":\\\"feature/design-new-api\\\"},\\\"description\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/schedule \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"timetable\":{\"per-hour\":0,\"hours-of-day\":[0],\"days-of-week\":[\"TUE\"],\"days-of-month\":[0],\"months\":[\"MAR\"]},\"attribution-actor\":\"current\",\"parameters\":{\"deploy_prod\":true,\"branch\":\"feature/design-new-api\"},\"description\":\"string\"}'"
    }
  ],
  "root.paths./project/{project-slug}/{job-number}/artifacts.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/artifacts',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/artifacts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/artifacts\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/artifacts \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{project-slug}/{job-number}/tests.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/tests',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/tests\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/tests\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/123/tests \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{provider}/{organization}/{project}.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{provider}/{organization}/{project}/pipeline/run.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/run',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    definition_id: '2338d0ae-5541-4bbf-88a2-55e9f7281f80',\n    config: {branch: 'main'},\n    checkout: {tag: 'v2'},\n    parameters: {example_param: 'my value', example_param2: true, example_param3: 3}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"definition_id\\\":\\\"2338d0ae-5541-4bbf-88a2-55e9f7281f80\\\",\\\"config\\\":{\\\"branch\\\":\\\"main\\\"},\\\"checkout\\\":{\\\"tag\\\":\\\"v2\\\"},\\\"parameters\\\":{\\\"example_param\\\":\\\"my value\\\",\\\"example_param2\\\":true,\\\"example_param3\\\":3}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/run\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/run\"\n\n\tpayload := strings.NewReader(\"{\\\"definition_id\\\":\\\"2338d0ae-5541-4bbf-88a2-55e9f7281f80\\\",\\\"config\\\":{\\\"branch\\\":\\\"main\\\"},\\\"checkout\\\":{\\\"tag\\\":\\\"v2\\\"},\\\"parameters\\\":{\\\"example_param\\\":\\\"my value\\\",\\\"example_param2\\\":true,\\\"example_param3\\\":3}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/pipeline/run \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"definition_id\":\"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\"config\":{\"branch\":\"main\"},\"checkout\":{\"tag\":\"v2\"},\"parameters\":{\"example_param\":\"my value\",\"example_param2\":true,\"example_param3\":3}}'"
    }
  ],
  "root.paths./project/{provider}/{organization}/{project}/settings.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./project/{provider}/{organization}/{project}/settings.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    advanced: {\n      autocancel_builds: true,\n      build_fork_prs: true,\n      build_prs_only: true,\n      disable_ssh: true,\n      forks_receive_secret_env_vars: true,\n      oss: true,\n      set_github_status: true,\n      setup_workflows: true,\n      write_settings_requires_admin: true,\n      pr_only_branch_overrides: ['string']\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"advanced\\\":{\\\"autocancel_builds\\\":true,\\\"build_fork_prs\\\":true,\\\"build_prs_only\\\":true,\\\"disable_ssh\\\":true,\\\"forks_receive_secret_env_vars\\\":true,\\\"oss\\\":true,\\\"set_github_status\\\":true,\\\"setup_workflows\\\":true,\\\"write_settings_requires_admin\\\":true,\\\"pr_only_branch_overrides\\\":[\\\"string\\\"]}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings\"\n\n\tpayload := strings.NewReader(\"{\\\"advanced\\\":{\\\"autocancel_builds\\\":true,\\\"build_fork_prs\\\":true,\\\"build_prs_only\\\":true,\\\"disable_ssh\\\":true,\\\"forks_receive_secret_env_vars\\\":true,\\\"oss\\\":true,\\\"set_github_status\\\":true,\\\"setup_workflows\\\":true,\\\"write_settings_requires_admin\\\":true,\\\"pr_only_branch_overrides\\\":[\\\"string\\\"]}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/project/gh/CircleCI-Public/api-preview-docs/settings \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"advanced\":{\"autocancel_builds\":true,\"build_fork_prs\":true,\"build_prs_only\":true,\"disable_ssh\":true,\"forks_receive_secret_env_vars\":true,\"oss\":true,\"set_github_status\":true,\"setup_workflows\":true,\"write_settings_requires_admin\":true,\"pr_only_branch_overrides\":[\"string\"]}}'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'Some pipeline name',\n    description: 'Some pipeline description',\n    config_source: {\n      provider: 'github_app',\n      repo: {external_id: 'some-repo-id'},\n      file_path: '.circleci/some-pipeline.yml'\n    },\n    checkout_source: {provider: 'github_app', repo: {external_id: 'some-repo-id'}}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"Some pipeline name\\\",\\\"description\\\":\\\"Some pipeline description\\\",\\\"config_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"},\\\"file_path\\\":\\\".circleci/some-pipeline.yml\\\"},\\\"checkout_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"}}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Some pipeline name\\\",\\\"description\\\":\\\"Some pipeline description\\\",\\\"config_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"},\\\"file_path\\\":\\\".circleci/some-pipeline.yml\\\"},\\\"checkout_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Some pipeline name\",\"description\":\"Some pipeline description\",\"config_source\":{\"provider\":\"github_app\",\"repo\":{\"external_id\":\"some-repo-id\"},\"file_path\":\".circleci/some-pipeline.yml\"},\"checkout_source\":{\"provider\":\"github_app\",\"repo\":{\"external_id\":\"some-repo-id\"}}}'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions/{pipeline_definition_id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions/{pipeline_definition_id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions/{pipeline_definition_id}.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'Some pipeline name',\n    description: 'Some pipeline description',\n    config_source: {file_path: '.circleci/some-pipeline.yml'},\n    checkout_source: {provider: 'github_app', repo: {external_id: 'some-repo-id'}}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"Some pipeline name\\\",\\\"description\\\":\\\"Some pipeline description\\\",\\\"config_source\\\":{\\\"file_path\\\":\\\".circleci/some-pipeline.yml\\\"},\\\"checkout_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"}}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Some pipeline name\\\",\\\"description\\\":\\\"Some pipeline description\\\",\\\"config_source\\\":{\\\"file_path\\\":\\\".circleci/some-pipeline.yml\\\"},\\\"checkout_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46 \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Some pipeline name\",\"description\":\"Some pipeline description\",\"config_source\":{\"file_path\":\".circleci/some-pipeline.yml\"},\"checkout_source\":{\"provider\":\"github_app\",\"repo\":{\"external_id\":\"some-repo-id\"}}}'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions/{pipeline_definition_id}/triggers.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/pipeline-definitions/{pipeline_definition_id}/triggers.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    event_source: {\n      provider: 'github_app',\n      repo: {external_id: 'some-repo-id'},\n      webhook: {sender: 'some-webhook-sender'}\n    },\n    event_preset: 'all-pushes',\n    checkout_ref: 'some-checkout-ref',\n    config_ref: 'some-config-ref',\n    event_name: 'some-event-name'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"event_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"},\\\"webhook\\\":{\\\"sender\\\":\\\"some-webhook-sender\\\"}},\\\"event_preset\\\":\\\"all-pushes\\\",\\\"checkout_ref\\\":\\\"some-checkout-ref\\\",\\\"config_ref\\\":\\\"some-config-ref\\\",\\\"event_name\\\":\\\"some-event-name\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers\"\n\n\tpayload := strings.NewReader(\"{\\\"event_source\\\":{\\\"provider\\\":\\\"github_app\\\",\\\"repo\\\":{\\\"external_id\\\":\\\"some-repo-id\\\"},\\\"webhook\\\":{\\\"sender\\\":\\\"some-webhook-sender\\\"}},\\\"event_preset\\\":\\\"all-pushes\\\",\\\"checkout_ref\\\":\\\"some-checkout-ref\\\",\\\"config_ref\\\":\\\"some-config-ref\\\",\\\"event_name\\\":\\\"some-event-name\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/pipeline-definitions/6cb29b00-8e02-4357-8bc0-313983bf1f46/triggers \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"event_source\":{\"provider\":\"github_app\",\"repo\":{\"external_id\":\"some-repo-id\"},\"webhook\":{\"sender\":\"some-webhook-sender\"}},\"event_preset\":\"all-pushes\",\"checkout_ref\":\"some-checkout-ref\",\"config_ref\":\"some-config-ref\",\"event_name\":\"some-event-name\"}'"
    }
  ],
  "root.paths./projects/{project_id}/rollback.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/rollback',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    component_name: 'frontend',\n    current_version: '1.0.0',\n    environment_name: 'production',\n    namespace: 'default',\n    parameters: {param1: 'value1', param2: 'value2'},\n    target_version: '1.0.1'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"component_name\\\":\\\"frontend\\\",\\\"current_version\\\":\\\"1.0.0\\\",\\\"environment_name\\\":\\\"production\\\",\\\"namespace\\\":\\\"default\\\",\\\"parameters\\\":{\\\"param1\\\":\\\"value1\\\",\\\"param2\\\":\\\"value2\\\"},\\\"target_version\\\":\\\"1.0.1\\\"}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/rollback\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/rollback\"\n\n\tpayload := strings.NewReader(\"{\\\"component_name\\\":\\\"frontend\\\",\\\"current_version\\\":\\\"1.0.0\\\",\\\"environment_name\\\":\\\"production\\\",\\\"namespace\\\":\\\"default\\\",\\\"parameters\\\":{\\\"param1\\\":\\\"value1\\\",\\\"param2\\\":\\\"value2\\\"},\\\"target_version\\\":\\\"1.0.1\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/rollback \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"component_name\":\"frontend\",\"current_version\":\"1.0.0\",\"environment_name\":\"production\",\"namespace\":\"default\",\"parameters\":{\"param1\":\"value1\",\"param2\":\"value2\"},\"target_version\":\"1.0.1\"}'"
    }
  ],
  "root.paths./projects/{project_id}/triggers/{trigger_id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/triggers/{trigger_id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./projects/{project_id}/triggers/{trigger_id}.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    event_preset: 'all-pushes',\n    checkout_ref: 'some-checkout-ref',\n    config_ref: 'some-config-ref',\n    event_name: 'some event name',\n    event_source: {webhook: {sender: 'some sender'}}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"event_preset\\\":\\\"all-pushes\\\",\\\"checkout_ref\\\":\\\"some-checkout-ref\\\",\\\"config_ref\\\":\\\"some-config-ref\\\",\\\"event_name\\\":\\\"some event name\\\",\\\"event_source\\\":{\\\"webhook\\\":{\\\"sender\\\":\\\"some sender\\\"}}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c\"\n\n\tpayload := strings.NewReader(\"{\\\"event_preset\\\":\\\"all-pushes\\\",\\\"checkout_ref\\\":\\\"some-checkout-ref\\\",\\\"config_ref\\\":\\\"some-config-ref\\\",\\\"event_name\\\":\\\"some event name\\\",\\\"event_source\\\":{\\\"webhook\\\":{\\\"sender\\\":\\\"some sender\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/projects/39723015-b399-4601-9ff6-bd1bfbed8fa8/triggers/bbea3a3d-4686-48b6-8d2d-2a14ace3913c \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"event_preset\":\"all-pushes\",\"checkout_ref\":\"some-checkout-ref\",\"config_ref\":\"some-config-ref\",\"event_name\":\"some event name\",\"event_source\":{\"webhook\":{\"sender\":\"some sender\"}}}'"
    }
  ],
  "root.paths./schedule/{schedule-id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/schedule/%7Bschedule-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/schedule/%7Bschedule-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/schedule/%7Bschedule-id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/schedule/%7Bschedule-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./schedule/{schedule-id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/schedule/%7Bschedule-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/schedule/%7Bschedule-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/schedule/%7Bschedule-id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/schedule/%7Bschedule-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./schedule/{schedule-id}.patch": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://circleci.com/api/v2/schedule/%7Bschedule-id%7D',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    description: 'string',\n    name: 'string',\n    timetable: {\n      'per-hour': 0,\n      'hours-of-day': [0],\n      'days-of-week': ['TUE'],\n      'days-of-month': [0],\n      months: ['MAR']\n    },\n    'attribution-actor': 'current',\n    parameters: {deploy_prod: true, branch: 'feature/design-new-api'}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"description\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"timetable\\\":{\\\"per-hour\\\":0,\\\"hours-of-day\\\":[0],\\\"days-of-week\\\":[\\\"TUE\\\"],\\\"days-of-month\\\":[0],\\\"months\\\":[\\\"MAR\\\"]},\\\"attribution-actor\\\":\\\"current\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true,\\\"branch\\\":\\\"feature/design-new-api\\\"}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PATCH\", \"/api/v2/schedule/%7Bschedule-id%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/schedule/%7Bschedule-id%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"description\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"timetable\\\":{\\\"per-hour\\\":0,\\\"hours-of-day\\\":[0],\\\"days-of-week\\\":[\\\"TUE\\\"],\\\"days-of-month\\\":[0],\\\"months\\\":[\\\"MAR\\\"]},\\\"attribution-actor\\\":\\\"current\\\",\\\"parameters\\\":{\\\"deploy_prod\\\":true,\\\"branch\\\":\\\"feature/design-new-api\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PATCH \\\n  --url https://circleci.com/api/v2/schedule/%7Bschedule-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"description\":\"string\",\"name\":\"string\",\"timetable\":{\"per-hour\":0,\"hours-of-day\":[0],\"days-of-week\":[\"TUE\"],\"days-of-month\":[0],\"months\":[\"MAR\"]},\"attribution-actor\":\"current\",\"parameters\":{\"deploy_prod\":true,\"branch\":\"feature/design-new-api\"}}'"
    }
  ],
  "root.paths./user/{id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/user/%7Bid%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/user/%7Bid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/user/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/user/%7Bid%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./webhook.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/webhook',\n  qs: {'scope-id': 'SOME_STRING_VALUE', 'scope-type': 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/webhook?scope-id=SOME_STRING_VALUE&scope-type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/webhook?scope-id=SOME_STRING_VALUE&scope-type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url 'https://circleci.com/api/v2/webhook?scope-id=SOME_STRING_VALUE&scope-type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./webhook.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/webhook',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'string',\n    events: ['workflow-completed'],\n    url: 'string',\n    'verify-tls': true,\n    'signing-secret': 'string',\n    scope: {id: '497f6eca-6276-4993-bfeb-53cbbbba6f08', type: 'project'}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"events\\\":[\\\"workflow-completed\\\"],\\\"url\\\":\\\"string\\\",\\\"verify-tls\\\":true,\\\"signing-secret\\\":\\\"string\\\",\\\"scope\\\":{\\\"id\\\":\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\",\\\"type\\\":\\\"project\\\"}}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/webhook\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/webhook\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"events\\\":[\\\"workflow-completed\\\"],\\\"url\\\":\\\"string\\\",\\\"verify-tls\\\":true,\\\"signing-secret\\\":\\\"string\\\",\\\"scope\\\":{\\\"id\\\":\\\"497f6eca-6276-4993-bfeb-53cbbbba6f08\\\",\\\"type\\\":\\\"project\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/webhook \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"events\":[\"workflow-completed\"],\"url\":\"string\",\"verify-tls\":true,\"signing-secret\":\"string\",\"scope\":{\"id\":\"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\"type\":\"project\"}}'"
    }
  ],
  "root.paths./webhook/{webhook-id}.delete": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"DELETE\", \"/api/v2/webhook/%7Bwebhook-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request DELETE \\\n  --url https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./webhook/{webhook-id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/webhook/%7Bwebhook-id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./webhook/{webhook-id}.put": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    name: 'string',\n    events: ['workflow-completed'],\n    url: 'string',\n    'signing-secret': 'string',\n    'verify-tls': true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"events\\\":[\\\"workflow-completed\\\"],\\\"url\\\":\\\"string\\\",\\\"signing-secret\\\":\\\"string\\\",\\\"verify-tls\\\":true}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"PUT\", \"/api/v2/webhook/%7Bwebhook-id%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"events\\\":[\\\"workflow-completed\\\"],\\\"url\\\":\\\"string\\\",\\\"signing-secret\\\":\\\"string\\\",\\\"verify-tls\\\":true}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request PUT \\\n  --url https://circleci.com/api/v2/webhook/%7Bwebhook-id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"events\":[\"workflow-completed\"],\"url\":\"string\",\"signing-secret\":\"string\",\"verify-tls\":true}'"
    }
  ],
  "root.paths./workflow/{id}.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./workflow/{id}/approve/{approval_request_id}.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/approve/%7Bapproval_request_id%7D',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"POST\", \"/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/approve/%7Bapproval_request_id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/approve/%7Bapproval_request_id%7D\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/approve/%7Bapproval_request_id%7D \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./workflow/{id}/cancel.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/cancel',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"POST\", \"/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/cancel\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/cancel\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/cancel \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./workflow/{id}/job.get": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/job',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\nheaders = { 'Authorization': \"Basic REPLACE_BASIC_AUTH\" }\n\nconn.request(\"GET\", \"/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/job\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/job\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request GET \\\n  --url https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/job \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH'"
    }
  ],
  "root.paths./workflow/{id}/rerun.post": [
    {
      "lang": "Node + Request",
      "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/rerun',\n  headers: {'content-type': 'application/json', Authorization: 'Basic REPLACE_BASIC_AUTH'},\n  body: {\n    enable_ssh: false,\n    from_failed: false,\n    jobs: ['c65b68ef-e73b-4bf2-be9a-7a322a9df150', '5e957edd-5e8c-4985-9178-5d0d69561822'],\n    sparse_tree: false\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
    },
    {
      "lang": "Python + Python3",
      "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"circleci.com\")\n\npayload = \"{\\\"enable_ssh\\\":false,\\\"from_failed\\\":false,\\\"jobs\\\":[\\\"c65b68ef-e73b-4bf2-be9a-7a322a9df150\\\",\\\"5e957edd-5e8c-4985-9178-5d0d69561822\\\"],\\\"sparse_tree\\\":false}\"\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"POST\", \"/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/rerun\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
    },
    {
      "lang": "Go + Native",
      "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/rerun\"\n\n\tpayload := strings.NewReader(\"{\\\"enable_ssh\\\":false,\\\"from_failed\\\":false,\\\"jobs\\\":[\\\"c65b68ef-e73b-4bf2-be9a-7a322a9df150\\\",\\\"5e957edd-5e8c-4985-9178-5d0d69561822\\\"],\\\"sparse_tree\\\":false}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    },
    {
      "lang": "Shell + Curl",
      "source": "curl --request POST \\\n  --url https://circleci.com/api/v2/workflow/5034460f-c7c4-4c43-9457-de07e2029e7b/rerun \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"enable_ssh\":false,\"from_failed\":false,\"jobs\":[\"c65b68ef-e73b-4bf2-be9a-7a322a9df150\",\"5e957edd-5e8c-4985-9178-5d0d69561822\"],\"sparse_tree\":false}'"
    }
  ]
}
